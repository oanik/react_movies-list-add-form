{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","initState","NewMovie","state","handleChange","event","target","name","value","setState","onSubmit","preventDefault","newMovie","creatNewMovie","props","onAdd","clearForm","error","disabled","Object","keys","this","slice","item","type","placeholder","onChange","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"6xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,WCrBJK,G,MAAY,CAChBf,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,KAGGE,EAAb,4MACEC,MAAQF,EADV,EAGEG,aAAe,SAACC,GAAW,IAAD,EACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,SAAL,eAAiBF,EAAOC,KAN5B,EASEE,SAAW,SAACL,GACVA,EAAMM,iBACN,IAAMC,EAAW,EAAKC,gBAEtB,EAAKC,MAAMC,MAAMH,GACjB,EAAKI,aAdT,EAiBEH,cAAgB,WAAO,IAAD,EACoC,EAAKV,MAgB7D,MAfiB,CACfjB,MAHkB,EACZA,MAGNC,YAJkB,EACLA,YAIbC,OALkB,EACQA,OAK1BC,QANkB,EACgBA,QAMlCW,OAPkB,EACyBA,OAO3CiB,MAAO,CACL/B,MAAO,GACPE,OAAQ,GACRC,QAAS,GACTW,OAAQ,IAEVkB,UAAU,IA/BhB,EAqCEF,UAAY,WACV,EAAKP,SAASR,IAtClB,4CAyCE,WAAU,IAAD,OACDW,EAAWO,OAAOC,KAAKC,KAAKlB,OAAOmB,MAAM,EAAG,GAElD,OACE,0BACEhC,UAAU,OACVoB,SAAUW,KAAKX,UAEdE,EAASf,KAAI,SAAA0B,GAAI,OAChB,yBAAKxB,IAAKwB,GACR,2BACExB,IAAKwB,EACLjC,UAAU,QACViB,KAAMgB,EACNC,KAAK,OACLhB,MAAO,EAAKL,MAAMoB,GAClBE,YAAW,gBAAWF,GACtBG,SAAU,SAACrB,GACT,EAAKD,aAAaC,UAK1B,4BAAQmB,KAAK,UAAb,YAhER,GAA8BG,a,OCPjBC,EAAb,4MACEzB,MAAQ,CACNP,OAAQiC,GAFZ,EAKEC,SAAW,SAAChC,GACV,EAAKW,UAAS,SAACN,GACb,MAAO,CACLP,OAAO,GAAD,mBAAMO,EAAMP,QAAZ,CAAoBE,SARlC,4CAaE,WAAU,IACAF,EAAWyB,KAAKlB,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEM,OAAQA,KAGZ,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACEyB,MAAOM,KAAKS,iBAzBxB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0df42c98.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst initState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport class NewMovie extends Component {\n  state = initState;\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const newMovie = this.creatNewMovie();\n\n    this.props.onAdd(newMovie);\n    this.clearForm();\n  }\n\n  creatNewMovie = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      error: {\n        title: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n      disabled: false,\n    };\n\n    return newMovie;\n  }\n\n  clearForm = () => {\n    this.setState(initState);\n  }\n\n  render() {\n    const newMovie = Object.keys(this.state).slice(0, 5);\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.onSubmit}\n      >\n        {newMovie.map(item => (\n          <div key={item}>\n            <input\n              key={item}\n              className=\"input\"\n              name={item}\n              type=\"text\"\n              value={this.state[item]}\n              placeholder={`Enter ${item}`}\n              onChange={(event) => {\n                this.handleChange(event);\n              }}\n            />\n          </div>\n        ))}\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}