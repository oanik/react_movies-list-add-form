{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","links","initState","error","showError","disabled","NewMovie","state","handleBlur","event","name","target","setState","validateError","validateForm","handleChange","isValidEmail","value","test","Object","values","requiredArr","filter","film","onSubmit","preventDefault","newMovie","creatNewMovie","props","onAdd","clearForm","this","item","type","placeholder","onChange","onBlur","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed985570.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","/* eslint-disable max-len */\n/* eslint-disable no-restricted-syntax */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nconst links = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\nconst movies = ['title', 'imdbUrl', 'imgUrl', 'description', 'imdbId'];\n\nconst initState = {\n  imdbUrl: '',\n  title: '',\n  imgUrl: '',\n  imdbId: '',\n  description: '',\n  error: {\n    title: false,\n    imdbUrl: false,\n    imgUrl: false,\n    imdbId: false,\n  },\n  showError: {\n    title: false,\n    imdbUrl: false,\n    imgUrl: false,\n    imdbId: false,\n  },\n  disabled: false,\n};\n\nexport class NewMovie extends Component {\n  state = initState;\n\n  handleBlur = (event) => {\n    const { error } = this.state;\n    const { name } = event.target;\n\n    if (!error[name]) {\n      return (this.validateError() && this.validateForm())\n        ? this.setState({ disabled: false })\n        : this.setState({ disabled: true });\n    }\n\n    return this.setState(state => ({\n      showError: {\n        ...state.showError, [name]: true,\n      },\n      disabled: true,\n    }));\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    const { showError } = this.state;\n    let isValidEmail;\n\n    switch (name) {\n      case 'imdbUrl':\n      case 'imgUrl': {\n        isValidEmail = links.test(value);\n\n        break;\n      }\n\n      case 'title':\n      case 'imdbId': {\n        isValidEmail = (value !== '');\n\n        break;\n      }\n\n      default: {\n        isValidEmail = true;\n        break;\n      }\n    }\n\n    this.setState(state => ({\n      [name]: value,\n      error: {\n        ...state.error, [name]: !isValidEmail,\n      },\n    }));\n\n    if (showError[name] && isValidEmail) {\n      this.setState(state => ({ showError: {\n        ...state.showError, [name]: false,\n      } }));\n    }\n  }\n\n  validateError = () => {\n    const { error } = this.state;\n\n    // eslint-disable-next-line no-restricted-syntax\n    for (const err of Object.values(error)) {\n      if (err === true) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  validateForm = () => {\n    // eslint-disable-next-line no-restricted-syntax\n    const requiredArr = movies.filter(movie => movie !== 'description');\n\n    for (const film of requiredArr) {\n      if (!this.state[film]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n    const newMovie = this.creatNewMovie();\n\n    this.props.onAdd(newMovie);\n    this.clearForm();\n  }\n\n  creatNewMovie = () => {\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    return newMovie;\n  }\n\n  clearForm = () => {\n    this.setState(initState);\n  }\n\n  render() {\n    const { showError } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.onSubmit}\n      >\n        <>\n          { movies.map(item => (\n            <div key={item}>\n              <input\n                className=\"input\"\n                name={item}\n                type=\"text\"\n                value={this.state[item]}\n                placeholder={`Enter ${item}`}\n                onChange={(event) => {\n                  this.handleChange(event);\n                }}\n                onBlur={this.handleBlur}\n              />\n              {showError[item] && (\n                <span\n                  className=\"error\"\n                >\n                  {`Please enter a valid\n                  ${item}`}\n                </span>\n              )}\n            </div>\n          ))}\n        </>\n        <button\n          type=\"submit\"\n          disabled={this.state.disabled}\n        >\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}